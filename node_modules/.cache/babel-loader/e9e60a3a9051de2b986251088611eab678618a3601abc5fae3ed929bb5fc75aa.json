{"ast":null,"code":"import { create } from 'zustand';\nimport { db } from '../firebase/config';\nimport { collection, addDoc, updateDoc, deleteDoc, doc, onSnapshot, query, orderBy } from 'firebase/firestore';\nconst useStore = create((set, get) => ({\n  events: [],\n  isLoading: true,\n  error: null,\n  selectedEvent: null,\n  selectedCategory: 'all',\n  // Установка состояния загрузки\n  setLoading: isLoading => set({\n    isLoading\n  }),\n  // Установка ошибки\n  setError: error => set({\n    error\n  }),\n  // Установка выбранного события\n  setSelectedEvent: event => set({\n    selectedEvent: event\n  }),\n  // Установка выбранной категории\n  setSelectedCategory: category => set({\n    selectedCategory: category\n  }),\n  // Инициализация подписки на события\n  initEvents: () => {\n    const q = query(collection(db, 'events'), orderBy('year', 'desc'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const events = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      set({\n        events,\n        isLoading: false,\n        error: null\n      });\n    }, error => {\n      set({\n        error: error.message,\n        isLoading: false\n      });\n    });\n    return unsubscribe;\n  },\n  // Добавление события\n  addEvent: async event => {\n    try {\n      set({\n        isLoading: true,\n        error: null\n      });\n      await addDoc(collection(db, 'events'), event);\n    } catch (error) {\n      set({\n        error: error.message,\n        isLoading: false\n      });\n    }\n  },\n  // Обновление события\n  updateEvent: async updatedEvent => {\n    try {\n      set({\n        isLoading: true,\n        error: null\n      });\n      const {\n        id,\n        ...eventData\n      } = updatedEvent;\n      await updateDoc(doc(db, 'events', id), eventData);\n    } catch (error) {\n      set({\n        error: error.message,\n        isLoading: false\n      });\n    }\n  },\n  // Удаление события\n  removeEvent: async id => {\n    try {\n      set({\n        isLoading: true,\n        error: null\n      });\n      await deleteDoc(doc(db, 'events', id));\n    } catch (error) {\n      set({\n        error: error.message,\n        isLoading: false\n      });\n    }\n  }\n}));\nexport default useStore;","map":{"version":3,"names":["create","db","collection","addDoc","updateDoc","deleteDoc","doc","onSnapshot","query","orderBy","useStore","set","get","events","isLoading","error","selectedEvent","selectedCategory","setLoading","setError","setSelectedEvent","event","setSelectedCategory","category","initEvents","q","unsubscribe","snapshot","docs","map","id","data","message","addEvent","updateEvent","updatedEvent","eventData","removeEvent"],"sources":["/Users/artemtugbaev/Documents/GitHub/SoundtrackofMyLife/src/store/useStore.jsx"],"sourcesContent":["import { create } from 'zustand';\nimport { db } from '../firebase/config';\nimport { collection, addDoc, updateDoc, deleteDoc, doc, onSnapshot, query, orderBy } from 'firebase/firestore';\n\nconst useStore = create((set, get) => ({\n  events: [],\n  isLoading: true,\n  error: null,\n  selectedEvent: null,\n  selectedCategory: 'all',\n  \n  // Установка состояния загрузки\n  setLoading: (isLoading) => set({ isLoading }),\n  \n  // Установка ошибки\n  setError: (error) => set({ error }),\n  \n  // Установка выбранного события\n  setSelectedEvent: (event) => set({ selectedEvent: event }),\n  \n  // Установка выбранной категории\n  setSelectedCategory: (category) => set({ selectedCategory: category }),\n  \n  // Инициализация подписки на события\n  initEvents: () => {\n    const q = query(collection(db, 'events'), orderBy('year', 'desc'));\n    \n    const unsubscribe = onSnapshot(\n      q,\n      (snapshot) => {\n        const events = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        set({ events, isLoading: false, error: null });\n      },\n      (error) => {\n        set({ error: error.message, isLoading: false });\n      }\n    );\n    \n    return unsubscribe;\n  },\n  \n  // Добавление события\n  addEvent: async (event) => {\n    try {\n      set({ isLoading: true, error: null });\n      await addDoc(collection(db, 'events'), event);\n    } catch (error) {\n      set({ error: error.message, isLoading: false });\n    }\n  },\n  \n  // Обновление события\n  updateEvent: async (updatedEvent) => {\n    try {\n      set({ isLoading: true, error: null });\n      const { id, ...eventData } = updatedEvent;\n      await updateDoc(doc(db, 'events', id), eventData);\n    } catch (error) {\n      set({ error: error.message, isLoading: false });\n    }\n  },\n  \n  // Удаление события\n  removeEvent: async (id) => {\n    try {\n      set({ isLoading: true, error: null });\n      await deleteDoc(doc(db, 'events', id));\n    } catch (error) {\n      set({ error: error.message, isLoading: false });\n    }\n  }\n}));\n\nexport default useStore; "],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,EAAE,QAAQ,oBAAoB;AACvC,SAASC,UAAU,EAAEC,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,GAAG,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,QAAQ,oBAAoB;AAE9G,MAAMC,QAAQ,GAAGV,MAAM,CAAC,CAACW,GAAG,EAAEC,GAAG,MAAM;EACrCC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE,IAAI;EACXC,aAAa,EAAE,IAAI;EACnBC,gBAAgB,EAAE,KAAK;EAEvB;EACAC,UAAU,EAAGJ,SAAS,IAAKH,GAAG,CAAC;IAAEG;EAAU,CAAC,CAAC;EAE7C;EACAK,QAAQ,EAAGJ,KAAK,IAAKJ,GAAG,CAAC;IAAEI;EAAM,CAAC,CAAC;EAEnC;EACAK,gBAAgB,EAAGC,KAAK,IAAKV,GAAG,CAAC;IAAEK,aAAa,EAAEK;EAAM,CAAC,CAAC;EAE1D;EACAC,mBAAmB,EAAGC,QAAQ,IAAKZ,GAAG,CAAC;IAAEM,gBAAgB,EAAEM;EAAS,CAAC,CAAC;EAEtE;EACAC,UAAU,EAAEA,CAAA,KAAM;IAChB,MAAMC,CAAC,GAAGjB,KAAK,CAACN,UAAU,CAACD,EAAE,EAAE,QAAQ,CAAC,EAAEQ,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAElE,MAAMiB,WAAW,GAAGnB,UAAU,CAC5BkB,CAAC,EACAE,QAAQ,IAAK;MACZ,MAAMd,MAAM,GAAGc,QAAQ,CAACC,IAAI,CAACC,GAAG,CAACvB,GAAG,KAAK;QACvCwB,EAAE,EAAExB,GAAG,CAACwB,EAAE;QACV,GAAGxB,GAAG,CAACyB,IAAI,CAAC;MACd,CAAC,CAAC,CAAC;MACHpB,GAAG,CAAC;QAAEE,MAAM;QAAEC,SAAS,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;IAChD,CAAC,EACAA,KAAK,IAAK;MACTJ,GAAG,CAAC;QAAEI,KAAK,EAAEA,KAAK,CAACiB,OAAO;QAAElB,SAAS,EAAE;MAAM,CAAC,CAAC;IACjD,CACF,CAAC;IAED,OAAOY,WAAW;EACpB,CAAC;EAED;EACAO,QAAQ,EAAE,MAAOZ,KAAK,IAAK;IACzB,IAAI;MACFV,GAAG,CAAC;QAAEG,SAAS,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACrC,MAAMZ,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,QAAQ,CAAC,EAAEoB,KAAK,CAAC;IAC/C,CAAC,CAAC,OAAON,KAAK,EAAE;MACdJ,GAAG,CAAC;QAAEI,KAAK,EAAEA,KAAK,CAACiB,OAAO;QAAElB,SAAS,EAAE;MAAM,CAAC,CAAC;IACjD;EACF,CAAC;EAED;EACAoB,WAAW,EAAE,MAAOC,YAAY,IAAK;IACnC,IAAI;MACFxB,GAAG,CAAC;QAAEG,SAAS,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACrC,MAAM;QAAEe,EAAE;QAAE,GAAGM;MAAU,CAAC,GAAGD,YAAY;MACzC,MAAM/B,SAAS,CAACE,GAAG,CAACL,EAAE,EAAE,QAAQ,EAAE6B,EAAE,CAAC,EAAEM,SAAS,CAAC;IACnD,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACdJ,GAAG,CAAC;QAAEI,KAAK,EAAEA,KAAK,CAACiB,OAAO;QAAElB,SAAS,EAAE;MAAM,CAAC,CAAC;IACjD;EACF,CAAC;EAED;EACAuB,WAAW,EAAE,MAAOP,EAAE,IAAK;IACzB,IAAI;MACFnB,GAAG,CAAC;QAAEG,SAAS,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACrC,MAAMV,SAAS,CAACC,GAAG,CAACL,EAAE,EAAE,QAAQ,EAAE6B,EAAE,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdJ,GAAG,CAAC;QAAEI,KAAK,EAAEA,KAAK,CAACiB,OAAO;QAAElB,SAAS,EAAE;MAAM,CAAC,CAAC;IACjD;EACF;AACF,CAAC,CAAC,CAAC;AAEH,eAAeJ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}